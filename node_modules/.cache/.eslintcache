[{"/Users/kayla/Documents/GitHub/t4sg-starter/src/index.js":"1","/Users/kayla/Documents/GitHub/t4sg-starter/src/App.js":"2","/Users/kayla/Documents/GitHub/t4sg-starter/src/reportWebVitals.js":"3","/Users/kayla/Documents/GitHub/t4sg-starter/src/components/form.js":"4","/Users/kayla/Documents/GitHub/t4sg-starter/src/components/getFact.js":"5"},{"size":500,"mtime":1613335478890,"results":"6","hashOfConfig":"7"},{"size":1523,"mtime":1613782941858,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1613335478891,"results":"9","hashOfConfig":"7"},{"size":1411,"mtime":1613779104462,"results":"10","hashOfConfig":"7"},{"size":898,"mtime":1613782940778,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"14owos0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kayla/Documents/GitHub/t4sg-starter/src/index.js",[],["24","25"],"/Users/kayla/Documents/GitHub/t4sg-starter/src/App.js",["26","27","28"],"/Users/kayla/Documents/GitHub/t4sg-starter/src/reportWebVitals.js",[],"/Users/kayla/Documents/GitHub/t4sg-starter/src/components/form.js",["29"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport class Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { userInput: '', output: '' };\n    }\n\n    handleChange = (event) => {\n        this.setState({userInput: event.target.value});\n        console.log(\"this is handleChange\");\n        console.log(event.target.value);\n    }\n\n    handleSubmit = (event) => {\n        fetch('http://127.0.0.1:5000/reverse', {\n            method: \"POST\",\n            cache: \"no-cache\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(this.state.userInput)\n        }).then(response => {\n            return response.json()\n        }).\n        then(json => {\n            this.setState({output: json[0]})\n        });\n        console.log(\"this is handleSubmit\");\n        console.log(this.state.userInput);\n    }\n\n    \n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit} method='get'>\n                <h2>String reversal:</h2>\n                <input type=\"text\"/>\n                <input type=\"submit\" onChange={this.handleChange}/>\n                </form>\n                <br></br>\n                <p>The reversed string is {this.state.output}</p>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<Form/>, document.getElementById('root'));","/Users/kayla/Documents/GitHub/t4sg-starter/src/components/getFact.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":4,"column":10,"nodeType":"36","messageId":"37","endLine":4,"endColumn":14},{"ruleId":"34","severity":1,"message":"38","line":5,"column":8,"nodeType":"36","messageId":"37","endLine":5,"endColumn":14},{"ruleId":"34","severity":1,"message":"39","line":10,"column":9,"nodeType":"36","messageId":"37","endLine":10,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":26,"column":11,"nodeType":"42","messageId":"43","endLine":26,"endColumn":12,"fix":"44"},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'axios' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"47","text":"48"},"no-global-assign","no-unsafe-negation",[753,763],"\n        ."]